{"version":3,"file":"react-native-pager.cjs.development.js","sources":["../src/pager.tsx","../src/util.ts","../src/pagination.tsx"],"sourcesContent":["import React, {\n  useState,\n  Children,\n  createContext,\n  useContext,\n  useEffect,\n} from 'react';\nimport { StyleSheet, LayoutChangeEvent, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  State,\n  PanGestureHandlerProperties,\n} from 'react-native-gesture-handler';\n\nexport type SpringConfig = {\n  damping: Animated.Adaptable<number>;\n  mass: Animated.Adaptable<number>;\n  stiffness: Animated.Adaptable<number>;\n  overshootClamping: Animated.Adaptable<number> | boolean;\n  restSpeedThreshold: Animated.Adaptable<number>;\n  restDisplacementThreshold: Animated.Adaptable<number>;\n  toValue: Animated.Adaptable<number>;\n};\n\n// copied from react-native-reanimated for now, can't get the export\nexport enum Extrapolate {\n  EXTEND = 'extend',\n  CLAMP = 'clamp',\n  IDENTITY = 'identity',\n}\n\ninterface InterpolationConfig {\n  inputRange: ReadonlyArray<Animated.Adaptable<number>>;\n  outputRange: ReadonlyArray<Animated.Adaptable<number>>;\n  extrapolate?: Extrapolate;\n  extrapolateLeft?: Extrapolate;\n  extrapolateRight?: Extrapolate;\n}\n\ntype iInterpolationFn = (\n  offset: Animated.Node<number>\n) => Animated.Node<number>;\n\ninterface iInterpolationConfig extends InterpolationConfig {\n  unit?: string;\n}\n\ntype iTransformProp = {\n  [transformProp: string]: iInterpolationConfig | iInterpolationFn;\n};\n\nexport interface iPageInterpolation {\n  [animatedProp: string]:\n    | iTransformProp[]\n    | iInterpolationConfig\n    | iInterpolationFn;\n}\n\nconst VERTICAL = 1;\nconst HORIZONTAL = 2;\nconst UNSET = -1;\nconst TRUE = 1;\nconst FALSE = 0;\n\nconst {\n  event,\n  block,\n  Value,\n  divide,\n  cond,\n  eq,\n  add,\n  stopClock,\n  Clock,\n  set,\n  clockRunning,\n  multiply,\n  sub,\n  call,\n  max,\n  min,\n  greaterThan,\n  abs,\n  ceil,\n  interpolateNode,\n  concat,\n  neq,\n  and,\n  startClock,\n  spring,\n  // @ts-ignore\n  debug,\n} = Animated;\n\nexport interface iPager {\n  activeIndex?: number;\n  onChange?: (nextIndex: number) => void;\n  initialIndex?: number;\n  children: React.ReactNode[];\n  springConfig?: Partial<SpringConfig>;\n  pageInterpolation?: iPageInterpolation;\n  panProps?: Partial<PanGestureHandlerProperties>;\n  pageSize?: number;\n  threshold?: number;\n  minIndex?: number;\n  maxIndex?: number;\n  adjacentChildOffset?: number;\n  style?: ViewStyle;\n  containerStyle?: ViewStyle;\n  animatedValue?: Animated.Value<number>;\n  animatedIndex?: Animated.Value<number>;\n  type?: 'horizontal' | 'vertical';\n  clamp?: {\n    prev?: number;\n    next?: number;\n  };\n  clampDrag?: {\n    prev?: number;\n    next?: number;\n  };\n}\nconst REALLY_BIG_NUMBER = 1000000000;\n\n// at its core, this component converts an activeIndex integer value to an Animated.Value\n// this animated value represents all intermediate values of a pager, e.g when a user is dragging, the index\n// value might be anything between 1 -> 2 as they are moving. when a gesture is completed, it figures out\n// the next activeIndex, snaps to it and passes it back. it also handles snapping to different indices when the activeIndex\n// prop changes.\n\n// all styles and positioning of child screens can be computed from this one value, based on a childs index and\n// any style config props passed to the Pager.\n\n// pretty much all other props passed to the Pager are configurations for different behaviours of what is described above\n\nfunction Pager({\n  activeIndex: parentActiveIndex,\n  onChange: parentOnChange,\n  initialIndex = 0,\n  children,\n  springConfig,\n  panProps = {},\n  pageSize = 1,\n  threshold = 0.1,\n  minIndex = 0,\n  maxIndex: parentMax,\n  adjacentChildOffset = 10,\n  style,\n  containerStyle,\n  type = 'horizontal',\n  pageInterpolation,\n  clamp = {},\n  clampDrag = {},\n  animatedValue,\n}: iPager) {\n  const context = useContext(PagerContext);\n\n  const isControlled = parentActiveIndex !== undefined;\n\n  const [_activeIndex, _onChange] = useState(initialIndex);\n\n  const activeIndex = isControlled\n    ? (parentActiveIndex as number)\n    : context\n    ? (context[0] as number)\n    : (_activeIndex as number);\n\n  const numberOfScreens = Children.count(children);\n\n  const maxIndex =\n    parentMax === undefined\n      ? Math.ceil((numberOfScreens - 1) / pageSize)\n      : parentMax;\n\n  const onChange = isControlled\n    ? (parentOnChange as any)\n    : context\n    ? (context[1] as any)\n    : (_onChange as any);\n\n  const dragX = memoize(new Value(0));\n  const dragY = memoize(new Value(0));\n  const gestureState = memoize(new Value(0));\n\n  const handleGesture = memoize(\n    event(\n      [\n        {\n          nativeEvent: {\n            translationX: dragX,\n            translationY: dragY,\n          },\n        },\n      ],\n      { useNativeDriver: true }\n    )\n  );\n\n  const handleStateChange = memoize(\n    event(\n      [\n        {\n          nativeEvent: {\n            state: gestureState,\n          },\n        },\n      ],\n      {\n        useNativeDriver: true,\n      }\n    )\n  );\n\n  let initialWidth = UNSET;\n  if (style && style.width) {\n    if (typeof style.width === 'number') {\n      initialWidth = style.width;\n    }\n  }\n\n  let initialHeight = UNSET;\n  if (style && style.height) {\n    if (typeof style.height === 'number') {\n      initialHeight = style.height;\n    }\n  }\n\n  const [width, setWidth] = useState(initialWidth);\n  const [height, setHeight] = useState(initialHeight);\n\n  // assign references based on vertical / horizontal configurations\n  const dimension = memoize(new Value(0));\n  const targetDimension = type === 'vertical' ? 'height' : 'width';\n  const targetTransform = type === 'vertical' ? 'translateY' : 'translateX';\n  const delta = type === 'vertical' ? dragY : dragX;\n\n  const layoutDimension = type === 'vertical' ? height : width;\n\n  // `totalDimension` on the container view is required for android layouts to work properly\n  // otherwise translations move the panHandler off of the screen\n  // set the total width of the container view to the sum width of all the screens\n  const totalDimension = multiply(dimension, numberOfScreens);\n\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\n    layout.width !== width && setWidth(layout.width);\n    layout.height !== height && setHeight(layout.height);\n  }\n\n  const TYPE = type === 'vertical' ? VERTICAL : HORIZONTAL;\n\n  // props that might change over time should be reactive:\n  const animatedThreshold = useAnimatedValue(threshold);\n  const clampDragPrev = useAnimatedValue(clampDrag.prev, REALLY_BIG_NUMBER);\n  const clampDragNext = useAnimatedValue(clampDrag.next, REALLY_BIG_NUMBER);\n  const animatedMaxIndex = useAnimatedValue(maxIndex);\n  const animatedMinIndex = useAnimatedValue(minIndex);\n\n  // set the initial position - priority to direct prop over context, and context over uncontrolled\n  const _position = memoize(new Value(activeIndex));\n  const position = animatedValue\n    ? animatedValue\n    : context\n    ? context[2]\n    : _position;\n\n  // pan event values to track\n  const dragStart = memoize(new Value(0));\n  const swiping = memoize(new Value(FALSE));\n  const nextIndex = memoize(new Value(activeIndex));\n  const animatedActiveIndex = memoize(new Value(activeIndex));\n  const change = memoize(sub(animatedActiveIndex, position));\n  const absChange = memoize(abs(change));\n  const shouldTransition = memoize(greaterThan(absChange, animatedThreshold));\n  const indexChange = memoize(new Value(0));\n\n  // clamp drag values between the configured clamp props\n  // e.g prev => 0.5, next => 0.5 means change can only be between [-0.5, 0.5]\n  // minMax order is reversed because next is negative in translation values\n  const clampedDelta = memoize(\n    min(\n      max(divide(delta, dimension), multiply(clampDragNext, -1)),\n      clampDragPrev\n    )\n  );\n\n  const clock = memoize(new Clock());\n\n  // snap focus to activeIndex when it updates\n  useEffect(() => {\n    if (activeIndex >= minIndex && activeIndex <= maxIndex) {\n      nextIndex.setValue(activeIndex);\n    }\n  }, [activeIndex, minIndex, maxIndex]);\n\n  // animatedIndex represents pager position with an animated value\n  // this value is used to compute the transformations of the container screen\n  // its also used to compute the offsets of child screens, and any other consumers\n  const animatedIndex = memoize(\n    block([\n      cond(\n        eq(gestureState, State.ACTIVE),\n        [\n          cond(clockRunning(clock), stopClock(clock)),\n          // captures the initial drag value on first drag event\n          cond(swiping, 0, [set(dragStart, position), set(swiping, TRUE)]),\n\n          set(position, sub(dragStart, clampedDelta)),\n        ],\n        [\n          // on release -- figure out if the index needs to change, and what index it should change to\n          cond(swiping, [\n            set(swiping, FALSE),\n            cond(shouldTransition, [\n              // rounds index change if pan gesture greater than just one screen\n              set(indexChange, ceil(absChange)),\n              // nextIndex set to the next snap point\n              set(\n                nextIndex,\n                cond(\n                  greaterThan(change, 0),\n                  min(\n                    max(\n                      sub(animatedActiveIndex, indexChange),\n                      animatedMinIndex\n                    ),\n                    animatedMaxIndex\n                  ),\n                  min(\n                    max(\n                      add(animatedActiveIndex, indexChange),\n                      animatedMinIndex\n                    ),\n                    animatedMaxIndex\n                  )\n                )\n              ),\n              // update w/ value that will be snapped to\n              call([nextIndex], ([nextIndex]) => onChange(nextIndex)),\n            ]),\n          ]),\n\n          // set animatedActiveIndex for next swipe event\n          set(animatedActiveIndex, nextIndex),\n          set(position, runSpring(clock, position, nextIndex, springConfig)),\n        ]\n      ),\n      position,\n    ])\n  );\n\n  const clampPrevValue = useAnimatedValue(clamp.prev, numberOfScreens);\n  const clampNextValue = useAnimatedValue(clamp.next, numberOfScreens);\n\n  // stop child screens from translating beyond the bounds set by clamp props:\n  const minimum = memoize(\n    multiply(sub(animatedIndex, clampPrevValue), dimension)\n  );\n\n  const maximum = memoize(\n    multiply(add(animatedIndex, clampNextValue), dimension)\n  );\n\n  const animatedPageSize = useAnimatedValue(pageSize);\n\n  // container offset -- this is the window of focus for active screens\n  // it shifts around based on the animatedIndex value\n  const containerTranslation = memoize(\n    multiply(animatedIndex, dimension, animatedPageSize, -1)\n  );\n\n  // slice the children that are rendered by the <Pager />\n  // this enables very large child lists to render efficiently\n  // the downside is that children are unmounted after they pass this threshold\n  // it's an optional prop, however a default value of ~20 is set here to prevent\n  // possible performance bottlenecks to those not aware of the prop or what it does\n\n  // this will slice adjacentChildOffset number of children previous and after\n  // the current active child index into a smaller child array\n  const adjacentChildren =\n    adjacentChildOffset !== undefined\n      ? children.slice(\n          Math.max(activeIndex - adjacentChildOffset, 0),\n          Math.min(activeIndex + adjacentChildOffset + 1, numberOfScreens)\n        )\n      : children;\n\n  // grabbing the height property from the style prop if there is no container style, this reduces\n  // the chances of messing up the layout with containerStyle configurations\n  // can be overridden by the prop itself, but its likely that this is what is intended most of the time\n  // also has the benefit of covering 100% width of container, meaning better pan coverage on android\n  const defaultContainerStyle =\n    style && style.height ? { height: style.height } : undefined;\n\n  function renderChildren() {\n    // waiting for initial layout - except when testing\n    if (width === UNSET) {\n      return null;\n    }\n\n    return adjacentChildren.map((child: any, i) => {\n      // use map instead of React.Children because we want to track\n      // the keys of these children by there index\n      // React.Children shifts these key values intelligently, but it\n      // causes issues with the memoized values in <Page /> components\n      let index = i;\n\n      if (adjacentChildOffset !== undefined) {\n        index =\n          activeIndex <= adjacentChildOffset\n            ? i\n            : activeIndex - adjacentChildOffset + i;\n      }\n\n      return (\n        <IndexProvider index={index} key={index}>\n          <FocusProvider focused={index === activeIndex}>\n            <Page\n              index={index}\n              animatedIndex={animatedIndex}\n              minimum={minimum}\n              maximum={maximum}\n              dimension={dimension}\n              targetTransform={targetTransform}\n              targetDimension={targetDimension}\n              pageInterpolation={pageInterpolation}\n            >\n              {child}\n            </Page>\n          </FocusProvider>\n        </IndexProvider>\n      );\n    });\n  }\n\n  // extra Animated.Views below may seem redundant but they preserve applied styles e.g padding and margin\n  // of the page views\n  return (\n    <Animated.View\n      style={containerStyle || defaultContainerStyle || { flex: 1 }}\n    >\n      <Animated.Code\n        key={layoutDimension}\n        exec={cond(\n          // dimension already set to last layout\n          and(eq(dimension, width), eq(dimension, height)),\n          [],\n          [\n            cond(\n              eq(TYPE, VERTICAL),\n              set(dimension, height),\n              set(dimension, width)\n            ),\n          ]\n        )}\n      />\n\n      <PanGestureHandler\n        {...panProps}\n        onGestureEvent={handleGesture}\n        onHandlerStateChange={handleStateChange}\n      >\n        <Animated.View style={{ flex: 1 }}>\n          <Animated.View style={style || { flex: 1 }}>\n            <Animated.View style={{ flex: 1 }} onLayout={handleLayout}>\n              <Animated.View\n                style={{\n                  flex: 1,\n                  [targetDimension]: totalDimension,\n                  transform: [\n                    { [targetTransform]: containerTranslation, skewY: '0' },\n                  ],\n                }}\n              >\n                {renderChildren()}\n              </Animated.View>\n            </Animated.View>\n          </Animated.View>\n        </Animated.View>\n      </PanGestureHandler>\n    </Animated.View>\n  );\n}\n\ninterface iPage {\n  children: React.ReactNode;\n  index: number;\n  minimum: Animated.Node<number>;\n  maximum: Animated.Node<number>;\n  dimension: Animated.Node<number>;\n  targetTransform: 'translateX' | 'translateY';\n  targetDimension: 'width' | 'height';\n  pageInterpolation: iPageInterpolation | undefined;\n  animatedIndex: Animated.Value<number>;\n}\n\nfunction Page({\n  children,\n  index,\n  minimum,\n  maximum,\n  dimension,\n  targetTransform,\n  targetDimension,\n  pageInterpolation,\n  animatedIndex,\n}: iPage) {\n  // compute the absolute position of the page based on index and dimension\n  // this means that it's not relative to any other child, which is good because\n  // it doesn't rely on a mechanism like flex, which requires all children to be present\n  // to properly position pages\n  const position = memoize(multiply(index, dimension));\n\n  // min-max the position based on clamp values\n  // this means the <Page /> will have a container that is always positioned\n  // in the same place, but the inner view can be translated within these bounds\n  const translation = memoize(min(max(position, minimum), maximum));\n\n  const defaultStyle = memoize({\n    // map to height / width value depending on vertical / horizontal configuration\n    // this is crucial to getting child views to properly lay out\n    [targetDimension]: dimension,\n    // min-max the position based on clamp values\n    // this means the <Page /> will have a container that is always positioned\n    // in the same place, but the inner view can be translated within these bounds\n    transform: [\n      {\n        [targetTransform]: translation,\n      },\n    ],\n  });\n\n  // compute the relative offset value to the current animated index so\n  // that <Page /> can use interpolation values that are in sync with drag gestures\n  const offset = memoize(sub(index, animatedIndex));\n\n  // apply interpolation configs to <Page />\n  const interpolatedStyles = memoize(\n    interpolateWithConfig(offset, pageInterpolation)\n  );\n\n  // take out zIndex here as it needs to be applied to siblings\n  let { zIndex, ...otherStyles } = interpolatedStyles;\n\n  // zIndex is not a requirement of interpolation\n  // it will be clear when someone needs it as views will overlap with some configurations\n  if (!zIndex) {\n    zIndex = 0;\n  }\n\n  return (\n    <Animated.View\n      style={{\n        ...StyleSheet.absoluteFillObject,\n        ...defaultStyle,\n        zIndex,\n      }}\n    >\n      <Animated.View style={[StyleSheet.absoluteFillObject, otherStyles]}>\n        {children}\n      </Animated.View>\n    </Animated.View>\n  );\n}\n\n// utility to update animated values without changing their reference\n// this is key for using memoized Animated.Values and prevents costly rerenders\nfunction useAnimatedValue(\n  value?: number,\n  defaultValue = 0\n): Animated.Value<number> {\n  const initialValue = value !== undefined ? value : defaultValue;\n  const animatedValue = memoize(new Value(initialValue));\n\n  useEffect(() => {\n    if (value !== undefined) {\n      animatedValue.setValue(value);\n    }\n  }, [value]);\n\n  return animatedValue;\n}\n\ntype iPagerContext = [\n  number,\n  (nextIndex: number) => void,\n  Animated.Value<number>\n];\n\nconst PagerContext = createContext<undefined | iPagerContext>(undefined);\n\ninterface iPagerProvider {\n  children: React.ReactNode;\n  initialIndex?: number;\n  activeIndex?: number;\n  onChange?: (nextIndex: number) => void;\n}\n\nfunction PagerProvider({\n  children,\n  initialIndex = 0,\n  activeIndex: parentActiveIndex,\n  onChange: parentOnChange = () =>\n    console.warn(\n      '<PagerProvider /> should have an onChange() prop if it is controlled'\n    ),\n}: iPagerProvider) {\n  const [_activeIndex, _setActiveIndex] = useState(initialIndex);\n\n  const isControlled = parentActiveIndex !== undefined;\n\n  const activeIndex = isControlled ? parentActiveIndex : _activeIndex;\n  const onChange = isControlled ? parentOnChange : _setActiveIndex;\n\n  const animatedIndex = memoize(new Value(activeIndex));\n\n  return (\n    <PagerContext.Provider\n      value={[activeIndex, onChange, animatedIndex] as iPagerContext}\n    >\n      {typeof children === 'function'\n        ? children({ activeIndex, onChange, animatedIndex })\n        : children}\n    </PagerContext.Provider>\n  );\n}\n\nfunction usePager(): iPagerContext {\n  const context = useContext(PagerContext);\n\n  if (context === undefined) {\n    throw new Error(`usePager() must be used within a <PagerProvider />`);\n  }\n\n  return context;\n}\n\n// provide hook for child screens to access pager focus:\nconst FocusContext = React.createContext(false);\n\ninterface iFocusProvider {\n  children: React.ReactNode;\n  focused: boolean;\n}\n\nfunction FocusProvider({ focused, children }: iFocusProvider) {\n  return (\n    <FocusContext.Provider value={focused}>{children}</FocusContext.Provider>\n  );\n}\n\nfunction useFocus() {\n  const focused = useContext(FocusContext);\n\n  return focused;\n}\n\nconst IndexContext = React.createContext<undefined | number>(undefined);\n\ninterface iIndexProvider {\n  children: React.ReactNode;\n  index: number;\n}\n\nfunction IndexProvider({ children, index }: iIndexProvider) {\n  return (\n    <IndexContext.Provider value={index}>{children}</IndexContext.Provider>\n  );\n}\n\nfunction useIndex() {\n  const index = useContext(IndexContext);\n\n  if (index === undefined) {\n    throw new Error(`useIndex() must be used within an <IndexProvider />`);\n  }\n\n  return index;\n}\n\nfunction useOnFocus(fn: Function) {\n  const focused = useFocus();\n\n  useEffect(() => {\n    if (focused) {\n      fn();\n    }\n  }, [focused]);\n}\n\nfunction useAnimatedIndex() {\n  const pager = usePager();\n  return pager[2];\n}\n\nfunction useOffset(index: number) {\n  const animatedIndex = useAnimatedIndex();\n  const offset = memoize(sub(index, animatedIndex));\n\n  return offset;\n}\n\nfunction useInterpolation(\n  pageInterpolation: iPageInterpolation,\n  index?: number\n) {\n  const _index = index !== undefined ? index : useIndex();\n  const offset = useOffset(_index);\n  const styles = memoize(interpolateWithConfig(offset, pageInterpolation));\n  return styles;\n}\n\nfunction interpolateWithConfig(\n  offset: Animated.Node<number>,\n  pageInterpolation?: iPageInterpolation\n): ViewStyle {\n  if (!pageInterpolation) {\n    return {};\n  }\n\n  return Object.keys(pageInterpolation).reduce((styles: any, key: any) => {\n    const currentStyle = pageInterpolation[key];\n\n    if (Array.isArray(currentStyle)) {\n      const _style = currentStyle.map((interpolationConfig: any) =>\n        interpolateWithConfig(offset, interpolationConfig)\n      );\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'object') {\n      let _style;\n      const { unit, ...rest } = currentStyle;\n      if (currentStyle.unit) {\n        _style = concat(interpolateNode(offset, rest), currentStyle.unit);\n      } else {\n        _style = interpolateNode(offset, currentStyle);\n      }\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'function') {\n      const _style = currentStyle(offset);\n      styles[key] = _style;\n      return styles;\n    }\n\n    return styles;\n  }, {});\n}\n\nfunction memoize(value: any): any {\n  const ref = React.useRef(value);\n  return ref.current;\n}\n\nconst DEFAULT_SPRING_CONFIG = {\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: false,\n  restDisplacementThreshold: 0.01,\n  restSpeedThreshold: 0.01,\n};\n\nfunction runSpring(\n  clock: Animated.Clock,\n  position: Animated.Value<number>,\n  toValue: Animated.Node<number>,\n  springConfig?: Partial<SpringConfig>\n) {\n  const state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: position,\n    time: new Value(0),\n  };\n\n  const config = {\n    ...DEFAULT_SPRING_CONFIG,\n    ...springConfig,\n    toValue: new Value(0),\n  };\n\n  return block([\n    cond(\n      clockRunning(clock),\n      [\n        cond(neq(config.toValue, toValue), [\n          set(state.finished, 0),\n          set(config.toValue, toValue),\n        ]),\n      ],\n      [\n        set(state.finished, 0),\n        set(state.time, 0),\n        set(state.velocity, 0),\n        set(config.toValue, toValue),\n        startClock(clock),\n      ]\n    ),\n    spring(clock, state, config),\n    cond(state.finished, [stopClock(clock), set(state.position, position)]),\n    state.position,\n  ]);\n}\n\nexport {\n  Pager,\n  PagerProvider,\n  PagerContext,\n  usePager,\n  useFocus,\n  useOffset,\n  useOnFocus,\n  useIndex,\n  useAnimatedIndex,\n  useInterpolation,\n  IndexProvider,\n  FocusProvider,\n};\n","import { useRef } from 'react';\nimport { ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { iPageInterpolation, SpringConfig } from './pager';\n\nconst {\n  interpolateNode,\n  concat,\n  Value,\n  clockRunning,\n  cond,\n  neq,\n  set,\n  startClock,\n  spring,\n  stopClock,\n  block,\n} = Animated;\n\nfunction interpolateWithConfig(\n  offset: Animated.Node<number>,\n  pageInterpolation?: iPageInterpolation\n): ViewStyle {\n  if (!pageInterpolation) {\n    return {};\n  }\n\n  return Object.keys(pageInterpolation).reduce((styles: any, key: any) => {\n    const currentStyle = pageInterpolation[key];\n\n    if (Array.isArray(currentStyle)) {\n      const _style = currentStyle.map((interpolationConfig: any) =>\n        interpolateWithConfig(offset, interpolationConfig)\n      );\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'object') {\n      let _style;\n      const { unit, ...rest } = currentStyle;\n      if (currentStyle.unit) {\n        _style = concat(interpolateNode(offset, rest), currentStyle.unit);\n      } else {\n        _style = interpolateNode(offset, currentStyle);\n      }\n\n      styles[key] = _style;\n      return styles;\n    }\n\n    if (typeof currentStyle === 'function') {\n      const _style = currentStyle(offset);\n      styles[key] = _style;\n      return styles;\n    }\n\n    return styles;\n  }, {});\n}\n\nfunction memoize(value: any): any {\n  const ref = useRef(value);\n  return ref.current;\n}\n\nconst DEFAULT_SPRING_CONFIG = {\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: false,\n  restDisplacementThreshold: 0.01,\n  restSpeedThreshold: 0.01,\n};\n\nfunction runSpring(\n  clock: Animated.Clock,\n  position: Animated.Value<number>,\n  toValue: Animated.Node<number>,\n  springConfig?: Partial<SpringConfig>\n) {\n  const state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: position,\n    time: new Value(0),\n  };\n\n  const config = {\n    ...DEFAULT_SPRING_CONFIG,\n    ...springConfig,\n    toValue: new Value(0),\n  };\n\n  return block([\n    cond(\n      clockRunning(clock),\n      [\n        cond(neq(config.toValue, toValue), [\n          set(state.finished, 0),\n          set(config.toValue, toValue),\n        ]),\n      ],\n      [\n        set(state.finished, 0),\n        set(state.time, 0),\n        set(state.velocity, 0),\n        set(config.toValue, toValue),\n        startClock(clock),\n      ]\n    ),\n    spring(clock, state, config),\n    cond(state.finished, [stopClock(clock), set(state.position, position)]),\n    state.position,\n  ]);\n}\n\nexport { interpolateWithConfig, memoize, runSpring };\n","import React, { Children } from 'react';\nimport Animated, { useAnimatedStyle, useValue } from 'react-native-reanimated';\nimport { ViewStyle, LayoutChangeEvent } from 'react-native';\nimport { iPageInterpolation, useOffset, useAnimatedIndex } from './pager';\nimport { memoize, interpolateWithConfig } from './util';\n\nconst { Value, divide, multiply, add } = Animated;\n\ninterface iPagination {\n  children: React.ReactNode;\n  pageInterpolation: iPageInterpolation;\n  style?: ViewStyle;\n}\n\nconst DEFAULT_PAGINATION_STYLE: ViewStyle = {\n  height: 50,\n  width: '100%',\n  flexDirection: 'row',\n};\n\nfunction Pagination({ children, pageInterpolation, style }: iPagination) {\n  return (\n    <Animated.View\n      style={{\n        ...DEFAULT_PAGINATION_STYLE,\n        ...style,\n      }}\n    >\n      {Children.map(children, (child: any, index) => (\n        <PaginationItem\n          index={index}\n          pageInterpolation={pageInterpolation}\n          style={child.props.style}\n        >\n          {child}\n        </PaginationItem>\n      ))}\n    </Animated.View>\n  );\n}\n\ninterface iPaginationItem {\n  children: React.ReactNode;\n  pageInterpolation: iPageInterpolation;\n  index: number;\n  style?: ViewStyle;\n}\n\nfunction PaginationItem({\n  children,\n  pageInterpolation,\n  index,\n  style,\n}: iPaginationItem) {\n  const offset = useOffset(index);\n  const configStyles = memoize(\n    interpolateWithConfig(offset, pageInterpolation)\n  );\n\n  return (\n    <Animated.View style={[style || { flex: 1 }, configStyles]}>\n      {children}\n    </Animated.View>\n  );\n}\n\ninterface iSlider {\n  numberOfScreens: number;\n  style: ViewStyle;\n}\n\nconst DEFAULT_SLIDER_STYLE = {\n  height: 2,\n  backgroundColor: 'aquamarine',\n};\n\nfunction Slider({ numberOfScreens, style }: iSlider) {\n  const animatedIndex = useAnimatedIndex();\n  const width = memoize(new Value(0));\n\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\n    width.setValue(layout.width as any);\n  }\n\n  const sliderWidth = divide(width, numberOfScreens);\n  const translation = memoize(multiply(animatedIndex, sliderWidth));\n\n  return (\n    <Animated.View onLayout={handleLayout}>\n      <Animated.View\n        // @ts-ignore\n        style={{\n          width: sliderWidth,\n          transform: [{ translateX: translation }],\n          ...DEFAULT_SLIDER_STYLE,\n          ...style,\n        }}\n      />\n    </Animated.View>\n  );\n}\n\nfunction Progress({ numberOfScreens, style }: iSlider) {\n  const animatedIndex = useAnimatedIndex();\n\n  const width = memoize(new Value(0));\n\n  function handleLayout({ nativeEvent: { layout } }: LayoutChangeEvent) {\n    width.setValue(layout.width as any);\n  }\n\n  const sliderWidth = memoize(\n    divide(width, numberOfScreens, divide(1, add(animatedIndex, 1)))\n  );\n\n  return (\n    <Animated.View onLayout={handleLayout}>\n      <Animated.View\n        style={{\n          width: sliderWidth,\n          ...DEFAULT_SLIDER_STYLE,\n          ...style,\n        }}\n      />\n    </Animated.View>\n  );\n}\n\nexport { Pagination, Slider, Progress };\n"],"names":["Extrapolate","VERTICAL","HORIZONTAL","UNSET","TRUE","FALSE","event","Animated","block","Value","divide","cond","eq","add","stopClock","Clock","set","clockRunning","multiply","sub","call","max","min","greaterThan","abs","ceil","interpolateNode","concat","neq","and","startClock","spring","debug","REALLY_BIG_NUMBER","Pager","parentActiveIndex","activeIndex","parentOnChange","onChange","initialIndex","children","springConfig","panProps","pageSize","threshold","minIndex","parentMax","maxIndex","adjacentChildOffset","style","containerStyle","type","pageInterpolation","clamp","clampDrag","animatedValue","context","useContext","PagerContext","isControlled","undefined","useState","_activeIndex","_onChange","numberOfScreens","Children","count","Math","dragX","memoize","dragY","gestureState","handleGesture","nativeEvent","translationX","translationY","useNativeDriver","handleStateChange","state","initialWidth","width","initialHeight","height","setWidth","setHeight","dimension","targetDimension","targetTransform","delta","layoutDimension","totalDimension","handleLayout","layout","TYPE","animatedThreshold","useAnimatedValue","clampDragPrev","prev","clampDragNext","next","animatedMaxIndex","animatedMinIndex","_position","position","dragStart","swiping","nextIndex","animatedActiveIndex","change","absChange","shouldTransition","indexChange","clampedDelta","clock","useEffect","setValue","animatedIndex","State","ACTIVE","runSpring","clampPrevValue","clampNextValue","minimum","maximum","animatedPageSize","containerTranslation","adjacentChildren","slice","defaultContainerStyle","renderChildren","map","child","i","index","React","IndexProvider","key","FocusProvider","focused","Page","View","flex","Code","exec","PanGestureHandler","onGestureEvent","onHandlerStateChange","onLayout","transform","skewY","translation","defaultStyle","offset","interpolatedStyles","interpolateWithConfig","zIndex","otherStyles","StyleSheet","absoluteFillObject","value","defaultValue","initialValue","createContext","PagerProvider","console","warn","_setActiveIndex","Provider","usePager","Error","FocusContext","useFocus","IndexContext","useIndex","useOnFocus","fn","useAnimatedIndex","pager","useOffset","useInterpolation","_index","styles","Object","keys","reduce","currentStyle","Array","isArray","_style","interpolationConfig","unit","rest","ref","useRef","current","DEFAULT_SPRING_CONFIG","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","finished","velocity","time","config","DEFAULT_PAGINATION_STYLE","flexDirection","Pagination","PaginationItem","props","configStyles","DEFAULT_SLIDER_STYLE","backgroundColor","Slider","sliderWidth","translateX","Progress"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,WAAYA;AACVA,EAAAA,qBAAA,WAAA;AACAA,EAAAA,oBAAA,UAAA;AACAA,EAAAA,uBAAA,aAAA;AACD,CAJD,EAAYA,mBAAW,KAAXA,mBAAW,KAAA,CAAvB;;AAiCA,IAAMC,QAAQ,GAAG,CAAjB;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,KAAK,GAAG,CAAC,CAAf;AACA,IAAMC,IAAI,GAAG,CAAb;AACA,IAAMC,KAAK,GAAG,CAAd;AAEA,IACEC,KADF,GA4BIC,QA5BJ,CACED,KADF;AAAA,IAEEE,KAFF,GA4BID,QA5BJ,CAEEC,KAFF;AAAA,IAGEC,KAHF,GA4BIF,QA5BJ,CAGEE,KAHF;AAAA,IAIEC,MAJF,GA4BIH,QA5BJ,CAIEG,MAJF;AAAA,IAKEC,IALF,GA4BIJ,QA5BJ,CAKEI,IALF;AAAA,IAMEC,EANF,GA4BIL,QA5BJ,CAMEK,EANF;AAAA,IAOEC,GAPF,GA4BIN,QA5BJ,CAOEM,GAPF;AAAA,IAQEC,SARF,GA4BIP,QA5BJ,CAQEO,SARF;AAAA,IASEC,KATF,GA4BIR,QA5BJ,CASEQ,KATF;AAAA,IAUEC,GAVF,GA4BIT,QA5BJ,CAUES,GAVF;AAAA,IAWEC,YAXF,GA4BIV,QA5BJ,CAWEU,YAXF;AAAA,IAYEC,QAZF,GA4BIX,QA5BJ,CAYEW,QAZF;AAAA,IAaEC,GAbF,GA4BIZ,QA5BJ,CAaEY,GAbF;AAAA,IAcEC,IAdF,GA4BIb,QA5BJ,CAcEa,IAdF;AAAA,IAeEC,GAfF,GA4BId,QA5BJ,CAeEc,GAfF;AAAA,IAgBEC,GAhBF,GA4BIf,QA5BJ,CAgBEe,GAhBF;AAAA,IAiBEC,WAjBF,GA4BIhB,QA5BJ,CAiBEgB,WAjBF;AAAA,IAkBEC,GAlBF,GA4BIjB,QA5BJ,CAkBEiB,GAlBF;AAAA,IAmBEC,IAnBF,GA4BIlB,QA5BJ,CAmBEkB,IAnBF;AAAA,IAoBEC,eApBF,GA4BInB,QA5BJ,CAoBEmB,eApBF;AAAA,IAqBEC,MArBF,GA4BIpB,QA5BJ,CAqBEoB,MArBF;AAAA,IAsBEC,GAtBF,GA4BIrB,QA5BJ,CAsBEqB,GAtBF;AAAA,IAuBEC,GAvBF,GA4BItB,QA5BJ,CAuBEsB,GAvBF;AAAA,IAwBEC,UAxBF,GA4BIvB,QA5BJ,CAwBEuB,UAxBF;AAAA,IAyBEC,MAzBF,GA4BIxB,QA5BJ,CAyBEwB,MAzBF;AAAA,IA2BEC,KA3BF,GA4BIzB,QA5BJ,CA2BEyB,KA3BF;AAyDA,IAAMC,iBAAiB,GAAG,UAA1B;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,SAASC,KAAT;;;MACeC,yBAAbC;MACUC,sBAAVC;+BACAC;MAAAA,8CAAe;MACfC,gBAAAA;MACAC,oBAAAA;2BACAC;MAAAA,sCAAW;2BACXC;MAAAA,sCAAW;4BACXC;MAAAA,wCAAY;2BACZC;MAAAA,sCAAW;MACDC,iBAAVC;mCACAC;MAAAA,yDAAsB;MACtBC,aAAAA;MACAC,sBAAAA;uBACAC;MAAAA,8BAAO;MACPC,yBAAAA;wBACAC;MAAAA,gCAAQ;4BACRC;MAAAA,wCAAY;MACZC,qBAAAA;AAEA,MAAMC,OAAO,GAAGC,gBAAU,CAACC,YAAD,CAA1B;AAEA,MAAMC,YAAY,GAAGxB,iBAAiB,KAAKyB,SAA3C;;AAEA,kBAAkCC,cAAQ,CAACtB,YAAD,CAA1C;AAAA,MAAOuB,YAAP;AAAA,MAAqBC,SAArB;;AAEA,MAAM3B,WAAW,GAAGuB,YAAY,GAC3BxB,iBAD2B,GAE5BqB,OAAO,GACNA,OAAO,CAAC,CAAD,CADD,GAENM,YAJL;AAMA,MAAME,eAAe,GAAGC,cAAQ,CAACC,KAAT,CAAe1B,QAAf,CAAxB;AAEA,MAAMO,QAAQ,GACZD,SAAS,KAAKc,SAAd,GACIO,IAAI,CAAC1C,IAAL,CAAU,CAACuC,eAAe,GAAG,CAAnB,IAAwBrB,QAAlC,CADJ,GAEIG,SAHN;AAKA,MAAMR,QAAQ,GAAGqB,YAAY,GACxBtB,cADwB,GAEzBmB,OAAO,GACNA,OAAO,CAAC,CAAD,CADD,GAENO,SAJL;AAMA,MAAMK,KAAK,GAAGC,OAAO,CAAC,IAAI5D,KAAJ,CAAU,CAAV,CAAD,CAArB;AACA,MAAM6D,KAAK,GAAGD,OAAO,CAAC,IAAI5D,KAAJ,CAAU,CAAV,CAAD,CAArB;AACA,MAAM8D,YAAY,GAAGF,OAAO,CAAC,IAAI5D,KAAJ,CAAU,CAAV,CAAD,CAA5B;AAEA,MAAM+D,aAAa,GAAGH,OAAO,CAC3B/D,KAAK,CACH,CACE;AACEmE,IAAAA,WAAW,EAAE;AACXC,MAAAA,YAAY,EAAEN,KADH;AAEXO,MAAAA,YAAY,EAAEL;AAFH;AADf,GADF,CADG,EASH;AAAEM,IAAAA,eAAe,EAAE;AAAnB,GATG,CADsB,CAA7B;AAcA,MAAMC,iBAAiB,GAAGR,OAAO,CAC/B/D,KAAK,CACH,CACE;AACEmE,IAAAA,WAAW,EAAE;AACXK,MAAAA,KAAK,EAAEP;AADI;AADf,GADF,CADG,EAQH;AACEK,IAAAA,eAAe,EAAE;AADnB,GARG,CAD0B,CAAjC;AAeA,MAAIG,YAAY,GAAG5E,KAAnB;;AACA,MAAI8C,KAAK,IAAIA,KAAK,CAAC+B,KAAnB,EAA0B;AACxB,QAAI,OAAO/B,KAAK,CAAC+B,KAAb,KAAuB,QAA3B,EAAqC;AACnCD,MAAAA,YAAY,GAAG9B,KAAK,CAAC+B,KAArB;AACD;AACF;;AAED,MAAIC,aAAa,GAAG9E,KAApB;;AACA,MAAI8C,KAAK,IAAIA,KAAK,CAACiC,MAAnB,EAA2B;AACzB,QAAI,OAAOjC,KAAK,CAACiC,MAAb,KAAwB,QAA5B,EAAsC;AACpCD,MAAAA,aAAa,GAAGhC,KAAK,CAACiC,MAAtB;AACD;AACF;;AAED,mBAA0BrB,cAAQ,CAACkB,YAAD,CAAlC;AAAA,MAAOC,KAAP;AAAA,MAAcG,QAAd;;AACA,mBAA4BtB,cAAQ,CAACoB,aAAD,CAApC;AAAA,MAAOC,MAAP;AAAA,MAAeE,SAAf;;;AAGA,MAAMC,SAAS,GAAGhB,OAAO,CAAC,IAAI5D,KAAJ,CAAU,CAAV,CAAD,CAAzB;AACA,MAAM6E,eAAe,GAAGnC,IAAI,KAAK,UAAT,GAAsB,QAAtB,GAAiC,OAAzD;AACA,MAAMoC,eAAe,GAAGpC,IAAI,KAAK,UAAT,GAAsB,YAAtB,GAAqC,YAA7D;AACA,MAAMqC,KAAK,GAAGrC,IAAI,KAAK,UAAT,GAAsBmB,KAAtB,GAA8BF,KAA5C;AAEA,MAAMqB,eAAe,GAAGtC,IAAI,KAAK,UAAT,GAAsB+B,MAAtB,GAA+BF,KAAvD;AAGA;AACA;;AACA,MAAMU,cAAc,GAAGxE,QAAQ,CAACmE,SAAD,EAAYrB,eAAZ,CAA/B;;AAEA,WAAS2B,YAAT;QAAuCC,eAAfnB,YAAemB;AACrCA,IAAAA,MAAM,CAACZ,KAAP,KAAiBA,KAAjB,IAA0BG,QAAQ,CAACS,MAAM,CAACZ,KAAR,CAAlC;AACAY,IAAAA,MAAM,CAACV,MAAP,KAAkBA,MAAlB,IAA4BE,SAAS,CAACQ,MAAM,CAACV,MAAR,CAArC;AACD;;AAED,MAAMW,IAAI,GAAG1C,IAAI,KAAK,UAAT,GAAsBlD,QAAtB,GAAiCC,UAA9C;;AAGA,MAAM4F,iBAAiB,GAAGC,gBAAgB,CAACnD,SAAD,CAA1C;AACA,MAAMoD,aAAa,GAAGD,gBAAgB,CAACzC,SAAS,CAAC2C,IAAX,EAAiBhE,iBAAjB,CAAtC;AACA,MAAMiE,aAAa,GAAGH,gBAAgB,CAACzC,SAAS,CAAC6C,IAAX,EAAiBlE,iBAAjB,CAAtC;AACA,MAAMmE,gBAAgB,GAAGL,gBAAgB,CAAChD,QAAD,CAAzC;AACA,MAAMsD,gBAAgB,GAAGN,gBAAgB,CAAClD,QAAD,CAAzC;;AAGA,MAAMyD,SAAS,GAAGjC,OAAO,CAAC,IAAI5D,KAAJ,CAAU2B,WAAV,CAAD,CAAzB;;AACA,MAAMmE,QAAQ,GAAGhD,aAAa,GAC1BA,aAD0B,GAE1BC,OAAO,GACPA,OAAO,CAAC,CAAD,CADA,GAEP8C,SAJJ;;AAOA,MAAME,SAAS,GAAGnC,OAAO,CAAC,IAAI5D,KAAJ,CAAU,CAAV,CAAD,CAAzB;AACA,MAAMgG,OAAO,GAAGpC,OAAO,CAAC,IAAI5D,KAAJ,CAAUJ,KAAV,CAAD,CAAvB;AACA,MAAMqG,SAAS,GAAGrC,OAAO,CAAC,IAAI5D,KAAJ,CAAU2B,WAAV,CAAD,CAAzB;AACA,MAAMuE,mBAAmB,GAAGtC,OAAO,CAAC,IAAI5D,KAAJ,CAAU2B,WAAV,CAAD,CAAnC;AACA,MAAMwE,MAAM,GAAGvC,OAAO,CAAClD,GAAG,CAACwF,mBAAD,EAAsBJ,QAAtB,CAAJ,CAAtB;AACA,MAAMM,SAAS,GAAGxC,OAAO,CAAC7C,GAAG,CAACoF,MAAD,CAAJ,CAAzB;AACA,MAAME,gBAAgB,GAAGzC,OAAO,CAAC9C,WAAW,CAACsF,SAAD,EAAYf,iBAAZ,CAAZ,CAAhC;AACA,MAAMiB,WAAW,GAAG1C,OAAO,CAAC,IAAI5D,KAAJ,CAAU,CAAV,CAAD,CAA3B;AAGA;AACA;;AACA,MAAMuG,YAAY,GAAG3C,OAAO,CAC1B/C,GAAG,CACDD,GAAG,CAACX,MAAM,CAAC8E,KAAD,EAAQH,SAAR,CAAP,EAA2BnE,QAAQ,CAACgF,aAAD,EAAgB,CAAC,CAAjB,CAAnC,CADF,EAEDF,aAFC,CADuB,CAA5B;AAOA,MAAMiB,KAAK,GAAG5C,OAAO,CAAC,IAAItD,KAAJ,EAAD,CAArB;;AAGAmG,EAAAA,eAAS,CAAC;AACR,QAAI9E,WAAW,IAAIS,QAAf,IAA2BT,WAAW,IAAIW,QAA9C,EAAwD;AACtD2D,MAAAA,SAAS,CAACS,QAAV,CAAmB/E,WAAnB;AACD;AACF,GAJQ,EAIN,CAACA,WAAD,EAAcS,QAAd,EAAwBE,QAAxB,CAJM,CAAT;AAOA;AACA;;AACA,MAAMqE,aAAa,GAAG/C,OAAO,CAC3B7D,KAAK,CAAC,CACJG,IAAI,CACFC,EAAE,CAAC2D,YAAD,EAAe8C,+BAAK,CAACC,MAArB,CADA,EAEF,CACE3G,IAAI,CAACM,YAAY,CAACgG,KAAD,CAAb,EAAsBnG,SAAS,CAACmG,KAAD,CAA/B,CADN;AAGEtG,EAAAA,IAAI,CAAC8F,OAAD,EAAU,CAAV,EAAa,CAACzF,GAAG,CAACwF,SAAD,EAAYD,QAAZ,CAAJ,EAA2BvF,GAAG,CAACyF,OAAD,EAAUrG,IAAV,CAA9B,CAAb,CAHN,EAKEY,GAAG,CAACuF,QAAD,EAAWpF,GAAG,CAACqF,SAAD,EAAYQ,YAAZ,CAAd,CALL,CAFE,EASF;AAEErG,EAAAA,IAAI,CAAC8F,OAAD,EAAU,CACZzF,GAAG,CAACyF,OAAD,EAAUpG,KAAV,CADS,EAEZM,IAAI,CAACmG,gBAAD,EAAmB;AAErB9F,EAAAA,GAAG,CAAC+F,WAAD,EAActF,IAAI,CAACoF,SAAD,CAAlB,CAFkB;AAIrB7F,EAAAA,GAAG,CACD0F,SADC,EAED/F,IAAI,CACFY,WAAW,CAACqF,MAAD,EAAS,CAAT,CADT,EAEFtF,GAAG,CACDD,GAAG,CACDF,GAAG,CAACwF,mBAAD,EAAsBI,WAAtB,CADF,EAEDV,gBAFC,CADF,EAKDD,gBALC,CAFD,EASF9E,GAAG,CACDD,GAAG,CACDR,GAAG,CAAC8F,mBAAD,EAAsBI,WAAtB,CADF,EAEDV,gBAFC,CADF,EAKDD,gBALC,CATD,CAFH,CAJkB;AAyBrBhF,EAAAA,IAAI,CAAC,CAACsF,SAAD,CAAD,EAAc;AAAA,QAAEA,SAAF;AAAA,WAAiBpE,QAAQ,CAACoE,SAAD,CAAzB;AAAA,GAAd,CAzBiB,CAAnB,CAFQ,CAAV,CAFN;AAkCE1F,EAAAA,GAAG,CAAC2F,mBAAD,EAAsBD,SAAtB,CAlCL,EAmCE1F,GAAG,CAACuF,QAAD,EAAWgB,SAAS,CAACN,KAAD,EAAQV,QAAR,EAAkBG,SAAlB,EAA6BjE,YAA7B,CAApB,CAnCL,CATE,CADA,EAgDJ8D,QAhDI,CAAD,CADsB,CAA7B;AAqDA,MAAMiB,cAAc,GAAGzB,gBAAgB,CAAC1C,KAAK,CAAC4C,IAAP,EAAajC,eAAb,CAAvC;AACA,MAAMyD,cAAc,GAAG1B,gBAAgB,CAAC1C,KAAK,CAAC8C,IAAP,EAAanC,eAAb,CAAvC;;AAGA,MAAM0D,OAAO,GAAGrD,OAAO,CACrBnD,QAAQ,CAACC,GAAG,CAACiG,aAAD,EAAgBI,cAAhB,CAAJ,EAAqCnC,SAArC,CADa,CAAvB;AAIA,MAAMsC,OAAO,GAAGtD,OAAO,CACrBnD,QAAQ,CAACL,GAAG,CAACuG,aAAD,EAAgBK,cAAhB,CAAJ,EAAqCpC,SAArC,CADa,CAAvB;AAIA,MAAMuC,gBAAgB,GAAG7B,gBAAgB,CAACpD,QAAD,CAAzC;AAGA;;AACA,MAAMkF,oBAAoB,GAAGxD,OAAO,CAClCnD,QAAQ,CAACkG,aAAD,EAAgB/B,SAAhB,EAA2BuC,gBAA3B,EAA6C,CAAC,CAA9C,CAD0B,CAApC;AAKA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAME,gBAAgB,GACpB9E,mBAAmB,KAAKY,SAAxB,GACIpB,QAAQ,CAACuF,KAAT,CACE5D,IAAI,CAAC9C,GAAL,CAASe,WAAW,GAAGY,mBAAvB,EAA4C,CAA5C,CADF,EAEEmB,IAAI,CAAC7C,GAAL,CAASc,WAAW,GAAGY,mBAAd,GAAoC,CAA7C,EAAgDgB,eAAhD,CAFF,CADJ,GAKIxB,QANN;AASA;AACA;AACA;;AACA,MAAMwF,qBAAqB,GACzB/E,KAAK,IAAIA,KAAK,CAACiC,MAAf,GAAwB;AAAEA,IAAAA,MAAM,EAAEjC,KAAK,CAACiC;AAAhB,GAAxB,GAAmDtB,SADrD;;AAGA,WAASqE,cAAT;AACE;AACA,QAAIjD,KAAK,KAAK7E,KAAd,EAAqB;AACnB,aAAO,IAAP;AACD;;AAED,WAAO2H,gBAAgB,CAACI,GAAjB,CAAqB,UAACC,KAAD,EAAaC,CAAb;AAC1B;AACA;AACA;AACA;AACA,UAAIC,KAAK,GAAGD,CAAZ;;AAEA,UAAIpF,mBAAmB,KAAKY,SAA5B,EAAuC;AACrCyE,QAAAA,KAAK,GACHjG,WAAW,IAAIY,mBAAf,GACIoF,CADJ,GAEIhG,WAAW,GAAGY,mBAAd,GAAoCoF,CAH1C;AAID;;AAED,aACEE,4BAAA,CAACC,aAAD;AAAeF,QAAAA,KAAK,EAAEA;AAAOG,QAAAA,GAAG,EAAEH;OAAlC,EACEC,4BAAA,CAACG,aAAD;AAAeC,QAAAA,OAAO,EAAEL,KAAK,KAAKjG;OAAlC,EACEkG,4BAAA,CAACK,IAAD;AACEN,QAAAA,KAAK,EAAEA;AACPjB,QAAAA,aAAa,EAAEA;AACfM,QAAAA,OAAO,EAAEA;AACTC,QAAAA,OAAO,EAAEA;AACTtC,QAAAA,SAAS,EAAEA;AACXE,QAAAA,eAAe,EAAEA;AACjBD,QAAAA,eAAe,EAAEA;AACjBlC,QAAAA,iBAAiB,EAAEA;OARrB,EAUG+E,KAVH,CADF,CADF,CADF;AAkBD,KAhCM,CAAP;AAiCD;AAGD;;;AACA,SACEG,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AACE3F,IAAAA,KAAK,EAAEC,cAAc,IAAI8E,qBAAlB,IAA2C;AAAEa,MAAAA,IAAI,EAAE;AAAR;GADpD,EAGEP,4BAAA,CAAC/H,QAAQ,CAACuI,IAAV;AACEN,IAAAA,GAAG,EAAE/C;AACLsD,IAAAA,IAAI,EAAEpI,IAAI;AAERkB,IAAAA,GAAG,CAACjB,EAAE,CAACyE,SAAD,EAAYL,KAAZ,CAAH,EAAuBpE,EAAE,CAACyE,SAAD,EAAYH,MAAZ,CAAzB,CAFK,EAGR,EAHQ,EAIR,CACEvE,IAAI,CACFC,EAAE,CAACiF,IAAD,EAAO5F,QAAP,CADA,EAEFe,GAAG,CAACqE,SAAD,EAAYH,MAAZ,CAFD,EAGFlE,GAAG,CAACqE,SAAD,EAAYL,KAAZ,CAHD,CADN,CAJQ;GAFZ,CAHF,EAmBEsD,4BAAA,CAACU,2CAAD,oBACMtG;AACJuG,IAAAA,cAAc,EAAEzE;AAChB0E,IAAAA,oBAAoB,EAAErE;IAHxB,EAKEyD,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAe3F,IAAAA,KAAK,EAAE;AAAE4F,MAAAA,IAAI,EAAE;AAAR;GAAtB,EACEP,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAe3F,IAAAA,KAAK,EAAEA,KAAK,IAAI;AAAE4F,MAAAA,IAAI,EAAE;AAAR;GAA/B,EACEP,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAe3F,IAAAA,KAAK,EAAE;AAAE4F,MAAAA,IAAI,EAAE;AAAR;AAAaM,IAAAA,QAAQ,EAAExD;GAA7C,EACE2C,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AACE3F,IAAAA,KAAK;AACH4F,MAAAA,IAAI,EAAE;AADH,eAEFvD,eAFE,IAEgBI,cAFhB,UAGH0D,SAHG,GAGQ,oBACN7D,eADM,IACYsC,oBADZ,QACkCwB,KADlC,GACyC,GADzC,SAHR;GADP,EASGpB,cAAc,EATjB,CADF,CADF,CADF,CALF,CAnBF,CADF;AA6CD;;AAcD,SAASU,IAAT;;;MACEnG,iBAAAA;MACA6F,cAAAA;MACAX,gBAAAA;MACAC,gBAAAA;MACAtC,kBAAAA;MACAE,wBAAAA;MACAD,wBAAAA;MACAlC,0BAAAA;MACAgE,sBAAAA;AAEA;AACA;AACA;AACA;AACA,MAAMb,QAAQ,GAAGlC,OAAO,CAACnD,QAAQ,CAACmH,KAAD,EAAQhD,SAAR,CAAT,CAAxB;AAGA;AACA;;AACA,MAAMiE,WAAW,GAAGjF,OAAO,CAAC/C,GAAG,CAACD,GAAG,CAACkF,QAAD,EAAWmB,OAAX,CAAJ,EAAyBC,OAAzB,CAAJ,CAA3B;AAEA,MAAM4B,YAAY,GAAGlF,OAAO,0BAGzBiB,eAHyB,IAGPD,SAHO,WAO1B+D,SAP0B,GAOf,oBAEN7D,eAFM,IAEY+D,WAFZ,SAPe,YAA5B;AAeA;;AACA,MAAME,MAAM,GAAGnF,OAAO,CAAClD,GAAG,CAACkH,KAAD,EAAQjB,aAAR,CAAJ,CAAtB;;AAGA,MAAMqC,kBAAkB,GAAGpF,OAAO,CAChCqF,qBAAqB,CAACF,MAAD,EAASpG,iBAAT,CADW,CAAlC;;AAKA,MAAMuG,MAAN,GAAiCF,kBAAjC,CAAME,MAAN;AAAA,MAAiBC,WAAjB,iCAAiCH,kBAAjC;AAGA;;;AACA,MAAI,CAACE,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG,CAAT;AACD;;AAED,SACErB,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AACE3F,IAAAA,KAAK,eACA4G,sBAAU,CAACC,kBADX,EAEAP,YAFA;AAGHI,MAAAA,MAAM,EAANA;AAHG;GADP,EAOErB,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAe3F,IAAAA,KAAK,EAAE,CAAC4G,sBAAU,CAACC,kBAAZ,EAAgCF,WAAhC;GAAtB,EACGpH,QADH,CAPF,CADF;AAaD;AAGD;;;AACA,SAASuD,gBAAT,CACEgE,KADF,EAEEC,YAFF;MAEEA;AAAAA,IAAAA,eAAe;;;AAEf,MAAMC,YAAY,GAAGF,KAAK,KAAKnG,SAAV,GAAsBmG,KAAtB,GAA8BC,YAAnD;AACA,MAAMzG,aAAa,GAAGc,OAAO,CAAC,IAAI5D,KAAJ,CAAUwJ,YAAV,CAAD,CAA7B;AAEA/C,EAAAA,eAAS,CAAC;AACR,QAAI6C,KAAK,KAAKnG,SAAd,EAAyB;AACvBL,MAAAA,aAAa,CAAC4D,QAAd,CAAuB4C,KAAvB;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,SAAOxG,aAAP;AACD;;IAQKG,YAAY,gBAAGwG,mBAAa,CAA4BtG,SAA5B;;AASlC,SAASuG,aAAT;MACE3H,iBAAAA;iCACAD;MAAAA,+CAAe;MACFJ,0BAAbC;6BACAE;MAAUD,6CAAiB;AAAA,WACzB+H,OAAO,CAACC,IAAR,CACE,sEADF,CADyB;AAAA;;AAK3B,mBAAwCxG,cAAQ,CAACtB,YAAD,CAAhD;AAAA,MAAOuB,YAAP;AAAA,MAAqBwG,eAArB;;AAEA,MAAM3G,YAAY,GAAGxB,iBAAiB,KAAKyB,SAA3C;AAEA,MAAMxB,WAAW,GAAGuB,YAAY,GAAGxB,iBAAH,GAAuB2B,YAAvD;AACA,MAAMxB,QAAQ,GAAGqB,YAAY,GAAGtB,cAAH,GAAoBiI,eAAjD;AAEA,MAAMlD,aAAa,GAAG/C,OAAO,CAAC,IAAI5D,KAAJ,CAAU2B,WAAV,CAAD,CAA7B;AAEA,SACEkG,4BAAA,CAAC5E,YAAY,CAAC6G,QAAd;AACER,IAAAA,KAAK,EAAE,CAAC3H,WAAD,EAAcE,QAAd,EAAwB8E,aAAxB;GADT,EAGG,OAAO5E,QAAP,KAAoB,UAApB,GACGA,QAAQ,CAAC;AAAEJ,IAAAA,WAAW,EAAXA,WAAF;AAAeE,IAAAA,QAAQ,EAARA,QAAf;AAAyB8E,IAAAA,aAAa,EAAbA;AAAzB,GAAD,CADX,GAEG5E,QALN,CADF;AASD;;AAED,SAASgI,QAAT;AACE,MAAMhH,OAAO,GAAGC,gBAAU,CAACC,YAAD,CAA1B;;AAEA,MAAIF,OAAO,KAAKI,SAAhB,EAA2B;AACzB,UAAM,IAAI6G,KAAJ,sDAAN;AACD;;AAED,SAAOjH,OAAP;AACD;;;AAGD,IAAMkH,YAAY,gBAAGpC,cAAK,CAAC4B,aAAN,CAAoB,KAApB,CAArB;;AAOA,SAASzB,aAAT;MAAyBC,gBAAAA;MAASlG,iBAAAA;AAChC,SACE8F,4BAAA,CAACoC,YAAY,CAACH,QAAd;AAAuBR,IAAAA,KAAK,EAAErB;GAA9B,EAAwClG,QAAxC,CADF;AAGD;;AAED,SAASmI,QAAT;AACE,MAAMjC,OAAO,GAAGjF,gBAAU,CAACiH,YAAD,CAA1B;AAEA,SAAOhC,OAAP;AACD;;AAED,IAAMkC,YAAY,gBAAGtC,cAAK,CAAC4B,aAAN,CAAwCtG,SAAxC,CAArB;;AAOA,SAAS2E,aAAT;MAAyB/F,iBAAAA;MAAU6F,cAAAA;AACjC,SACEC,4BAAA,CAACsC,YAAY,CAACL,QAAd;AAAuBR,IAAAA,KAAK,EAAE1B;GAA9B,EAAsC7F,QAAtC,CADF;AAGD;;AAED,SAASqI,QAAT;AACE,MAAMxC,KAAK,GAAG5E,gBAAU,CAACmH,YAAD,CAAxB;;AAEA,MAAIvC,KAAK,KAAKzE,SAAd,EAAyB;AACvB,UAAM,IAAI6G,KAAJ,uDAAN;AACD;;AAED,SAAOpC,KAAP;AACD;;AAED,SAASyC,UAAT,CAAoBC,EAApB;AACE,MAAMrC,OAAO,GAAGiC,QAAQ,EAAxB;AAEAzD,EAAAA,eAAS,CAAC;AACR,QAAIwB,OAAJ,EAAa;AACXqC,MAAAA,EAAE;AACH;AACF,GAJQ,EAIN,CAACrC,OAAD,CAJM,CAAT;AAKD;;AAED,SAASsC,gBAAT;AACE,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,SAAOS,KAAK,CAAC,CAAD,CAAZ;AACD;;AAED,SAASC,SAAT,CAAmB7C,KAAnB;AACE,MAAMjB,aAAa,GAAG4D,gBAAgB,EAAtC;AACA,MAAMxB,MAAM,GAAGnF,OAAO,CAAClD,GAAG,CAACkH,KAAD,EAAQjB,aAAR,CAAJ,CAAtB;AAEA,SAAOoC,MAAP;AACD;;AAED,SAAS2B,gBAAT,CACE/H,iBADF,EAEEiF,KAFF;AAIE,MAAM+C,MAAM,GAAG/C,KAAK,KAAKzE,SAAV,GAAsByE,KAAtB,GAA8BwC,QAAQ,EAArD;;AACA,MAAMrB,MAAM,GAAG0B,SAAS,CAACE,MAAD,CAAxB;AACA,MAAMC,MAAM,GAAGhH,OAAO,CAACqF,qBAAqB,CAACF,MAAD,EAASpG,iBAAT,CAAtB,CAAtB;AACA,SAAOiI,MAAP;AACD;;AAED,SAAS3B,qBAAT,CACEF,MADF,EAEEpG,iBAFF;AAIE,MAAI,CAACA,iBAAL,EAAwB;AACtB,WAAO,EAAP;AACD;;AAED,SAAOkI,MAAM,CAACC,IAAP,CAAYnI,iBAAZ,EAA+BoI,MAA/B,CAAsC,UAACH,MAAD,EAAc7C,GAAd;AAC3C,QAAMiD,YAAY,GAAGrI,iBAAiB,CAACoF,GAAD,CAAtC;;AAEA,QAAIkD,KAAK,CAACC,OAAN,CAAcF,YAAd,CAAJ,EAAiC;AAC/B,UAAMG,MAAM,GAAGH,YAAY,CAACvD,GAAb,CAAiB,UAAC2D,mBAAD;AAAA,eAC9BnC,qBAAqB,CAACF,MAAD,EAASqC,mBAAT,CADS;AAAA,OAAjB,CAAf;;AAIAR,MAAAA,MAAM,CAAC7C,GAAD,CAAN,GAAcoD,MAAd;AACA,aAAOP,MAAP;AACD;;AAED,QAAI,OAAOI,YAAP,KAAwB,QAA5B,EAAsC;AACpC,UAAIG,OAAJ;;AACA,UAAQE,IAAR,GAA0BL,YAA1B,CAAQK,IAAR;AAAA,UAAiBC,IAAjB,iCAA0BN,YAA1B;;AACA,UAAIA,YAAY,CAACK,IAAjB,EAAuB;AACrBF,QAAAA,OAAM,GAAGjK,MAAM,CAACD,eAAe,CAAC8H,MAAD,EAASuC,IAAT,CAAhB,EAAgCN,YAAY,CAACK,IAA7C,CAAf;AACD,OAFD,MAEO;AACLF,QAAAA,OAAM,GAAGlK,eAAe,CAAC8H,MAAD,EAASiC,YAAT,CAAxB;AACD;;AAEDJ,MAAAA,MAAM,CAAC7C,GAAD,CAAN,GAAcoD,OAAd;AACA,aAAOP,MAAP;AACD;;AAED,QAAI,OAAOI,YAAP,KAAwB,UAA5B,EAAwC;AACtC,UAAMG,OAAM,GAAGH,YAAY,CAACjC,MAAD,CAA3B;;AACA6B,MAAAA,MAAM,CAAC7C,GAAD,CAAN,GAAcoD,OAAd;AACA,aAAOP,MAAP;AACD;;AAED,WAAOA,MAAP;AACD,GAhCM,EAgCJ,EAhCI,CAAP;AAiCD;;AAED,SAAShH,OAAT,CAAiB0F,KAAjB;AACE,MAAMiC,GAAG,GAAG1D,cAAK,CAAC2D,MAAN,CAAalC,KAAb,CAAZ;AACA,SAAOiC,GAAG,CAACE,OAAX;AACD;;AAED,IAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,SAAS,EAAE,IADiB;AAE5BC,EAAAA,OAAO,EAAE,GAFmB;AAG5BC,EAAAA,IAAI,EAAE,CAHsB;AAI5BC,EAAAA,iBAAiB,EAAE,KAJS;AAK5BC,EAAAA,yBAAyB,EAAE,IALC;AAM5BC,EAAAA,kBAAkB,EAAE;AANQ,CAA9B;;AASA,SAASlF,SAAT,CACEN,KADF,EAEEV,QAFF,EAGEmG,OAHF,EAIEjK,YAJF;AAME,MAAMqC,KAAK,GAAG;AACZ6H,IAAAA,QAAQ,EAAE,IAAIlM,KAAJ,CAAU,CAAV,CADE;AAEZmM,IAAAA,QAAQ,EAAE,IAAInM,KAAJ,CAAU,CAAV,CAFE;AAGZ8F,IAAAA,QAAQ,EAAEA,QAHE;AAIZsG,IAAAA,IAAI,EAAE,IAAIpM,KAAJ,CAAU,CAAV;AAJM,GAAd;;AAOA,MAAMqM,MAAM,gBACPX,qBADO,EAEP1J,YAFO;AAGViK,IAAAA,OAAO,EAAE,IAAIjM,KAAJ,CAAU,CAAV;AAHC,IAAZ;;AAMA,SAAOD,KAAK,CAAC,CACXG,IAAI,CACFM,YAAY,CAACgG,KAAD,CADV,EAEF,CACEtG,IAAI,CAACiB,GAAG,CAACkL,MAAM,CAACJ,OAAR,EAAiBA,OAAjB,CAAJ,EAA+B,CACjC1L,GAAG,CAAC8D,KAAK,CAAC6H,QAAP,EAAiB,CAAjB,CAD8B,EAEjC3L,GAAG,CAAC8L,MAAM,CAACJ,OAAR,EAAiBA,OAAjB,CAF8B,CAA/B,CADN,CAFE,EAQF,CACE1L,GAAG,CAAC8D,KAAK,CAAC6H,QAAP,EAAiB,CAAjB,CADL,EAEE3L,GAAG,CAAC8D,KAAK,CAAC+H,IAAP,EAAa,CAAb,CAFL,EAGE7L,GAAG,CAAC8D,KAAK,CAAC8H,QAAP,EAAiB,CAAjB,CAHL,EAIE5L,GAAG,CAAC8L,MAAM,CAACJ,OAAR,EAAiBA,OAAjB,CAJL,EAKE5K,UAAU,CAACmF,KAAD,CALZ,CARE,CADO,EAiBXlF,MAAM,CAACkF,KAAD,EAAQnC,KAAR,EAAegI,MAAf,CAjBK,EAkBXnM,IAAI,CAACmE,KAAK,CAAC6H,QAAP,EAAiB,CAAC7L,SAAS,CAACmG,KAAD,CAAV,EAAmBjG,GAAG,CAAC8D,KAAK,CAACyB,QAAP,EAAiBA,QAAjB,CAAtB,CAAjB,CAlBO,EAmBXzB,KAAK,CAACyB,QAnBK,CAAD,CAAZ;AAqBD;;;ACxyBD,AAKA,IACE7E,iBADF,GAYInB,QAZJ,CACEmB,eADF;AAAA,IAEEC,QAFF,GAYIpB,QAZJ,CAEEoB,MAFF;AAAA,IAGElB,OAHF,GAYIF,QAZJ,CAGEE,KAHF;AAAA,IAIEQ,cAJF,GAYIV,QAZJ,CAIEU,YAJF;AAAA,IAKEN,MALF,GAYIJ,QAZJ,CAKEI,IALF;AAAA,IAMEiB,KANF,GAYIrB,QAZJ,CAMEqB,GANF;AAAA,IAOEZ,KAPF,GAYIT,QAZJ,CAOES,GAPF;AAAA,IAQEc,YARF,GAYIvB,QAZJ,CAQEuB,UARF;AAAA,IASEC,QATF,GAYIxB,QAZJ,CASEwB,MATF;AAAA,IAUEjB,WAVF,GAYIP,QAZJ,CAUEO,SAVF;AAAA,IAWEN,OAXF,GAYID,QAZJ,CAWEC,KAXF;;AAcA,SAASkJ,uBAAT,CACEF,MADF,EAEEpG,iBAFF;AAIE,MAAI,CAACA,iBAAL,EAAwB;AACtB,WAAO,EAAP;AACD;;AAED,SAAOkI,MAAM,CAACC,IAAP,CAAYnI,iBAAZ,EAA+BoI,MAA/B,CAAsC,UAACH,MAAD,EAAc7C,GAAd;AAC3C,QAAMiD,YAAY,GAAGrI,iBAAiB,CAACoF,GAAD,CAAtC;;AAEA,QAAIkD,KAAK,CAACC,OAAN,CAAcF,YAAd,CAAJ,EAAiC;AAC/B,UAAMG,MAAM,GAAGH,YAAY,CAACvD,GAAb,CAAiB,UAAC2D,mBAAD;AAAA,eAC9BnC,uBAAqB,CAACF,MAAD,EAASqC,mBAAT,CADS;AAAA,OAAjB,CAAf;;AAIAR,MAAAA,MAAM,CAAC7C,GAAD,CAAN,GAAcoD,MAAd;AACA,aAAOP,MAAP;AACD;;AAED,QAAI,OAAOI,YAAP,KAAwB,QAA5B,EAAsC;AACpC,UAAIG,OAAJ;;AACA,UAAQE,IAAR,GAA0BL,YAA1B,CAAQK,IAAR;AAAA,UAAiBC,IAAjB,iCAA0BN,YAA1B;;AACA,UAAIA,YAAY,CAACK,IAAjB,EAAuB;AACrBF,QAAAA,OAAM,GAAGjK,QAAM,CAACD,iBAAe,CAAC8H,MAAD,EAASuC,IAAT,CAAhB,EAAgCN,YAAY,CAACK,IAA7C,CAAf;AACD,OAFD,MAEO;AACLF,QAAAA,OAAM,GAAGlK,iBAAe,CAAC8H,MAAD,EAASiC,YAAT,CAAxB;AACD;;AAEDJ,MAAAA,MAAM,CAAC7C,GAAD,CAAN,GAAcoD,OAAd;AACA,aAAOP,MAAP;AACD;;AAED,QAAI,OAAOI,YAAP,KAAwB,UAA5B,EAAwC;AACtC,UAAMG,OAAM,GAAGH,YAAY,CAACjC,MAAD,CAA3B;;AACA6B,MAAAA,MAAM,CAAC7C,GAAD,CAAN,GAAcoD,OAAd;AACA,aAAOP,MAAP;AACD;;AAED,WAAOA,MAAP;AACD,GAhCM,EAgCJ,EAhCI,CAAP;AAiCD;;AAED,SAAShH,SAAT,CAAiB0F,KAAjB;AACE,MAAMiC,GAAG,GAAGC,YAAM,CAAClC,KAAD,CAAlB;AACA,SAAOiC,GAAG,CAACE,OAAX;AACD;;AC3DD,IAAQzL,OAAR,GAAyCF,QAAzC,CAAQE,KAAR;AAAA,IAAeC,QAAf,GAAyCH,QAAzC,CAAeG,MAAf;AAAA,IAAuBQ,UAAvB,GAAyCX,QAAzC,CAAuBW,QAAvB;AAAA,IAAiCL,KAAjC,GAAyCN,QAAzC,CAAiCM,GAAjC;AAQA,IAAMkM,wBAAwB,GAAc;AAC1C7H,EAAAA,MAAM,EAAE,EADkC;AAE1CF,EAAAA,KAAK,EAAE,MAFmC;AAG1CgI,EAAAA,aAAa,EAAE;AAH2B,CAA5C;;AAMA,SAASC,UAAT;MAAsBzK,gBAAAA;MAAUY,yBAAAA;MAAmBH,aAAAA;AACjD,SACEqF,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AACE3F,IAAAA,KAAK,eACA8J,wBADA,EAEA9J,KAFA;GADP,EAMGgB,cAAQ,CAACiE,GAAT,CAAa1F,QAAb,EAAuB,UAAC2F,KAAD,EAAaE,KAAb;AAAA,WACtBC,4BAAA,CAAC4E,cAAD;AACE7E,MAAAA,KAAK,EAAEA;AACPjF,MAAAA,iBAAiB,EAAEA;AACnBH,MAAAA,KAAK,EAAEkF,KAAK,CAACgF,KAAN,CAAYlK;KAHrB,EAKGkF,KALH,CADsB;AAAA,GAAvB,CANH,CADF;AAkBD;;AASD,SAAS+E,cAAT;MACE1K,iBAAAA;MACAY,0BAAAA;MACAiF,cAAAA;MACApF,cAAAA;AAEA,MAAMuG,MAAM,GAAG0B,SAAS,CAAC7C,KAAD,CAAxB;AACA,MAAM+E,YAAY,GAAG/I,SAAO,CAC1BqF,uBAAqB,CAACF,MAAD,EAASpG,iBAAT,CADK,CAA5B;AAIA,SACEkF,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAe3F,IAAAA,KAAK,EAAE,CAACA,KAAK,IAAI;AAAE4F,MAAAA,IAAI,EAAE;AAAR,KAAV,EAAuBuE,YAAvB;GAAtB,EACG5K,QADH,CADF;AAKD;;AAOD,IAAM6K,oBAAoB,GAAG;AAC3BnI,EAAAA,MAAM,EAAE,CADmB;AAE3BoI,EAAAA,eAAe,EAAE;AAFU,CAA7B;;AAKA,SAASC,MAAT;MAAkBvJ,wBAAAA;MAAiBf,cAAAA;AACjC,MAAMmE,aAAa,GAAG4D,gBAAgB,EAAtC;AACA,MAAMhG,KAAK,GAAGX,SAAO,CAAC,IAAI5D,OAAJ,CAAU,CAAV,CAAD,CAArB;;AAEA,WAASkF,YAAT;QAAuCC,eAAfnB,YAAemB;AACrCZ,IAAAA,KAAK,CAACmC,QAAN,CAAevB,MAAM,CAACZ,KAAtB;AACD;;AAED,MAAMwI,WAAW,GAAG9M,QAAM,CAACsE,KAAD,EAAQhB,eAAR,CAA1B;AACA,MAAMsF,WAAW,GAAGjF,SAAO,CAACnD,UAAQ,CAACkG,aAAD,EAAgBoG,WAAhB,CAAT,CAA3B;AAEA,SACElF,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAeO,IAAAA,QAAQ,EAAExD;GAAzB,EACE2C,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAA;AACE;AACA3F,IAAAA,KAAK;AACH+B,MAAAA,KAAK,EAAEwI,WADJ;AAEHpE,MAAAA,SAAS,EAAE,CAAC;AAAEqE,QAAAA,UAAU,EAAEnE;AAAd,OAAD;AAFR,OAGA+D,oBAHA,EAIApK,KAJA;GAFP,CADF,CADF;AAaD;;AAED,SAASyK,QAAT;MAAoB1J,wBAAAA;MAAiBf,cAAAA;AACnC,MAAMmE,aAAa,GAAG4D,gBAAgB,EAAtC;AAEA,MAAMhG,KAAK,GAAGX,SAAO,CAAC,IAAI5D,OAAJ,CAAU,CAAV,CAAD,CAArB;;AAEA,WAASkF,YAAT;QAAuCC,eAAfnB,YAAemB;AACrCZ,IAAAA,KAAK,CAACmC,QAAN,CAAevB,MAAM,CAACZ,KAAtB;AACD;;AAED,MAAMwI,WAAW,GAAGnJ,SAAO,CACzB3D,QAAM,CAACsE,KAAD,EAAQhB,eAAR,EAAyBtD,QAAM,CAAC,CAAD,EAAIG,KAAG,CAACuG,aAAD,EAAgB,CAAhB,CAAP,CAA/B,CADmB,CAA3B;AAIA,SACEkB,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AAAeO,IAAAA,QAAQ,EAAExD;GAAzB,EACE2C,4BAAA,CAAC/H,QAAQ,CAACqI,IAAV;AACE3F,IAAAA,KAAK;AACH+B,MAAAA,KAAK,EAAEwI;AADJ,OAEAH,oBAFA,EAGApK,KAHA;GADP,CADF,CADF;AAWD;;;;;;;;;;;;;;;;;;;"}